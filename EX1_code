
#(a) Compute the unnormalized posterior density and plot it

# prior sigma ~ uniform(1,3)
# Y ~ N(0, sd=sigma)

# record Y
Y <- c(-1.4132526, 0.8443594, -2.6628625, -3.5429051,
       2.4482109, -3.7110128, -0.1110948, -1.5821031,
       -0.5346214, -0.3185383)

# generate sample of sigma
sigma1 <- runif(1000, 1, 3)

# define the unnormalized posterior function
f1 <- function(x) {
  prod(dnorm(Y, 0, x))*0.5
}

# calculate the unnormalized posterior
t <- sapply(sigma1, function(x) f1(x))

# plot the unnormalized posterior
plot(t~sigma1, type="h")


#(b) What is the posterior probability that σ is between 1.5 and 2.5

# calculate the sum of the entire vector describing unnormalized densities 
a <- sum(t)

# normalize the posterior
den <- t/a

# calculate the probability
sum(den[sigma1>=1.5 & sigma1<=2.5])


#(c) What is the 95% HDI of the posterior distribution of σ? The 50% HDI?

# descending order all the densities 
den_ord <- order(den, decreasing=TRUE)

# define the accumulated variable of density
cumsum <- cumsum(den[den_ord])

# find the least number of density to reach 95% HDI
idx <- min(which(cumsum>=0.95))

# find the largest sigma within the selected 95% region
max(sigma1[den_ord[1:idx]])

# find the smallest sigma within the selected 95% region
min(sigma1[den_ord[1:idx]])

# repeat the process for 50% HDI
idx2 <- min(which(cumsum>=0.50))

max(sigma1[den_ord[1:idx2]])
min(sigma1[den_ord[1:idx2]])

#(d)Plot histograms of your 50 answers 

# generate random Y from given normal distribution
Y <- rnorm(10, 0, 2)

# define the comprehensive function that simulated process listed above
f1 <- function(x) {
  prod(dnorm(Y, 0, x))*0.5
}

repetition <- function(Y) {
  sigma <- runif(1000, 1, 3)
  t <- sapply(sigma, function(x) f1(x))
  a <- sum(t)
  den <- t/a
  int <- sum(den[sigma>=1.5 & sigma<=2.5])
  den_ord <- order(den, decreasing=TRUE)
  cumsum <- cumsum(den[den_ord])
  idx <- min(which(cumsum>=0.95))
  upper <- max(sigma[den_ord[1:idx]])
  lower <- min(sigma[den_ord[1:idx]])
  idx2 <- min(which(cumsum>=0.50))
  upper2 <- max(sigma[den_ord[1:idx2]])
  lower2 <- min(sigma[den_ord[1:idx2]])
  return(c(int, lower, upper, lower2, upper2))
}

# create a null object to load results of 50 experiments
mat <- NULL

# repeat the process 50 times
for (i in 1:50) {
  mat <- rbind(mat, repetition(Y))
}

# visualize the output
hist(mat[,1], main="The probability from 1.5 to 2.5", xlab="probability", ylab="frequency")
hist(mat[,2], main="lower boundary of 95% HDI", xlab="sigma", ylab="frequency")
hist(mat[,3], main="upper boundary of 95% HDI", xlab="sigma", ylab="frequency")
hist(mat[,4], main="lower boundary of 50% HDI", xlab="sigma", ylab="frequency")
hist(mat[,5], main="upper boundary of 50% HDI", xlab="sigma", ylab="frequency")

